name: Stock updates from Issues

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Parse drawerCode & newQty from issue
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = (context.payload.issue.body || "").trim();
            const dc  = body.match(/drawerCode:\s*([A-Za-z0-9_\-]+)/)?.[1] || "";
            const qty = body.match(/newQty:\s*(\d+)/)?.[1] || "";
            if (!dc || !qty) {
              core.setFailed('Missing drawerCode or newQty. Expected:\n  drawerCode: C2_CP2_0_I\n  newQty: 7');
            } else {
              core.setOutput('drawerCode', dc);
              core.setOutput('newQty', qty);
            }

      - name: Update docs/stock.csv
        id: update
        shell: bash
        env:
          DC: ${{ steps.parse.outputs.drawerCode }}
          QTY: ${{ steps.parse.outputs.newQty }}
        run: |
          set -e
          FILE="docs/stock.csv"
          [ -f "$FILE" ] || { echo "$FILE not found"; exit 1; }

          header=$(head -n1 "$FILE" | tr -d '\r')
          req="drawerCode,stockQty,productName,productCode,description"
          [ "$header" = "$req" ] || { echo "Bad header: $header"; exit 1; }

          echo "$QTY" | grep -Eq '^[0-9]+$' || { echo "newQty is not integer"; exit 1; }

          # Update column 2 (stockQty) where column 1 (drawerCode) matches
          awk -F, -v dc="$DC" -v qty="$QTY" 'BEGIN{OFS=","}
            NR==1{print; next}
            $1==dc{$2=qty; updated=1} {print}
            END{ if(!updated) exit 42 }
          ' "$FILE" > "$FILE.tmp" || code=$?

          if [ "${code:-0}" = "42" ]; then
            echo "drawerCode $DC not found"; exit 1
          fi

          mv "$FILE.tmp" "$FILE"

      - name: Commit & push change
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/stock.csv
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "chore(stock): ${{ steps.parse.outputs.drawerCode }} → ${{ steps.parse.outputs.newQty }} (via issue #${{ github.event.issue.number }})"
          git push

      - name: Comment & close issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const ok = "${{ steps.update.outcome }}" === "success";
            const msg = ok ? "✅ Stock updated & committed." : "❌ Failed. Check workflow logs.";
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: msg
            });
            if (ok) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                state: 'closed'
              });
            }
