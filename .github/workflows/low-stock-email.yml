name: Email on Low Stock

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/stock.csv'          # es dispara quan canvia aquest fitxer
  workflow_dispatch:              # també es pot llançar manualment

env:
  STOCK_PATH: docs/stock.csv      # ruta correcta al CSV
  DEFAULT_MIN_STOCK: "2"          # min per defecte si la columna no existeix

jobs:
  check-and-email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Detect low stock and build email body
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          # 1) Comprova que existeix el CSV
          CSV="${{ env.STOCK_PATH }}"
          if [ ! -f "$CSV" ]; then
            echo "CSV not found at $CSV" >&2
            echo "count=0" >> "$GITHUB_OUTPUT"
            printf "Stock file not found: %s\n" "$CSV" > email_body.txt
            exit 0
          fi

          # 2) Executa el script Python del repo (cap heredoc dins YAML)
          python3 scripts/gen_low_stock_email.py

          # 3) Publica el recompte perquè el següent pas pugui condicionar-se
          COUNT=$(cat count.txt 2>/dev/null || echo 0)
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Send email (SMTP)
        if: steps.detect.outputs.count != '0'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Low Stock Alert — ${{ github.repository }}"
          from: ${{ secrets.FROM_EMAIL }}
          to: ${{ secrets.TO_EMAILS || secrets.TO_EMAIL }}
          secure: ${{ secrets.SMTP_SECURE || 'false' }}  # 587→false, 465→true
          body: file:email_body.txt
