      - name: Detect low stock and build email body
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          CSV="${{ env.STOCK_PATH }}"
          if [ ! -f "$CSV" ]; then
            echo "CSV not found at $CSV" >&2
            echo "count=0" >> "$GITHUB_OUTPUT"
            printf "Stock file not found: %s\n" "$CSV" > email_body.txt
            exit 0
          fi

          # Genera cos del correu i recompte amb Python
          python3 - <<'PY'
import csv, os

csv_path = os.environ.get("STOCK_PATH", "docs/stock.csv")
default_min = int(os.environ.get("DEFAULT_MIN_STOCK","2"))

rows = []
with open(csv_path, newline='', encoding='utf-8') as f:
    sample = f.read(4096)
    f.seek(0)
    try:
        has_header = csv.Sniffer().has_header(sample)
    except Exception:
        has_header = False
    reader = csv.reader(f)
    if has_header:
        next(reader, None)
    for r in reader:
        if not r:
            continue
        r = (r + [""]*6)[:6]
        drawer, qty, pname, pcode, desc, minsto = r
        def to_int(x, fb=0):
            try:
                return int(str(x).strip())
            except:
                return fb
        qty_i = to_int(qty, fb=-1)
        min_i = to_int(minsto, fb=default_min)
        if qty_i >= 0 and qty_i <= min_i:
            rows.append((drawer.strip(), qty_i, min_i, pname.strip(), pcode.strip(), desc.strip()))

with open("email_body.txt","w",encoding="utf-8") as out:
    if not rows:
        out.write("✅ No low-stock items detected.\n")
    else:
        out.write("⚠️ Low stock detected on the following items:\n\n")
        for i, r in enumerate(rows, 1):
            drawer, qty_i, min_i, pname, pcode, desc = r
            out.write(f"{i}. {drawer} — qty: {qty_i} (min: {min_i})\n")
            if pname: out.write(f"   name: {pname}\n")
            if pcode: out.write(f"   code: {pcode}\n")
            if desc:  out.write(f"   desc: {desc}\n")
            out.write("\n")

# desa recompte perquè el llegeixi el pas bash
with open("count.txt","w",encoding="utf-8") as f:
    f.write(str(len(rows)))
PY

          COUNT=$(cat count.txt 2>/dev/null || echo 0)
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
