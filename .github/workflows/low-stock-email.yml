name: Email on Low Stock

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/stock.csv'
  workflow_dispatch:

env:
  STOCK_PATH: docs/stock.csv
  DEFAULT_MIN_STOCK: "2"
  # Ruta (al repo) del logo. Si no existeix, el script el saltarà.
  LOGO_PATH: docs/assets/parcsafe-logo.png

jobs:
  check-and-email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2   # per comparar amb HEAD^ el CSV anterior

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Prepare previous CSV (if any)
        id: prev
        shell: bash
        run: |
          set -euo pipefail
          if git show HEAD^:${{ env.STOCK_PATH }} > prev.csv 2>/dev/null; then
            echo "has_prev=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_prev=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Detect newly low-stock items and build HTML email
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          CSV="${{ env.STOCK_PATH }}"
          if [ ! -f "$CSV" ]; then
            echo "CSV not found at $CSV" >&2
            echo "count=0" >> "$GITHUB_OUTPUT"
            printf '<html><body style="font-family:Arial,Helvetica,sans-serif;font-size:16px"><p style="margin:0">Stock file not found: <code>%s</code></p></body></html>\n' "$CSV" > email_body.html
            exit 0
          fi

          python3 scripts/gen_low_stock_email.py \
            --current "$CSV" \
            --prev prev.csv \
            --logo-path "${{ env.LOGO_PATH }}"

          COUNT=$(cat count.txt 2>/dev/null || echo 0)
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"

      - name: Send email (SMTP)
        if: steps.detect.outputs.count != '0'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}

          # Assumpte curt
          subject: "LOW STOCK ALERT"

          # Remitent personalitzat (nom visible)
          from: "\"STOCK ALERT!!\" <${{ secrets.FROM_EMAIL }}>"

          # Destinataris
          to: ${{ secrets.TO_EMAILS || secrets.TO_EMAIL }}

          # TLS segons port
          secure: ${{ secrets.SMTP_SECURE || 'false' }}   # 587→false, 465→true

          # ✅ Cos HTML correcte (renderitzat)
          html_body: file://email_body.html

          # (opcional) per adjuntar el CSV original
          # attachments: docs/stock.csv
